{"ast":null,"code":"var _jsxFileName = \"/Users/machd/Projects/React&Node/bt_notes/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './Input';\nimport Icon from './icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nfunction Auth() {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignUp] = useState(false);\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState();\n  const history = useHistory();\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const switchMode = () => {\n    setIsSignUp(prevIsSignUp => !prevIsSignUp);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj; //cannot get property\n\n    const token = res === null || res === void 0 ? void 0 : res.tokenId; //console.log(result);\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(\"Google sign in unsuccessful\");\n    }\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google sign in unsuccessful\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstNmae\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastNmae\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"847882486171-1emc0cvst6acsclheaa4i3049knkk49l.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 169\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign In' : 'Create an new account? Sign Up'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Auth, \"xkBJff9EzLeSIBDZbEtpg0bOQXc=\", false, function () {\n  return [useStyles, useDispatch, useHistory];\n});\n\n_c = Auth;\n;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/machd/Projects/React&Node/bt_notes/client/src/components/Auth/Auth.js"],"names":["React","useState","GoogleLogin","Avatar","Button","Paper","Grid","Typography","Container","TextField","useDispatch","useHistory","useStyles","LockOutlinedIcon","Input","Icon","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","showPassword","setShowPassword","isSignup","setIsSignUp","dispatch","formData","setFormData","history","handleShowPassword","prevShowPassword","handleSubmit","handleChange","switchMode","prevIsSignUp","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport { GoogleLogin } from 'react-google-login';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport  useStyles  from './styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Input from './Input';\nimport Icon  from './icon';\n\n\nconst initialState = {firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nfunction Auth() {\n    const classes = useStyles();\n    const [showPassword, setShowPassword ] = useState(false);\n    const [isSignup, setIsSignUp] = useState(false);\n    const dispatch = useDispatch();\n    const [formData, setFormData ] = useState();\n    const history = useHistory();\n\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const handleSubmit = ()=>{\n\n    };\n    const handleChange = () => {\n\n    };\n    const switchMode = () =>{\n        setIsSignUp((prevIsSignUp) => !prevIsSignUp);\n        handleShowPassword(false);\n      \n\n    }\n   const googleSuccess = async (res) => {\n       const result= res?.profileObj; //cannot get property\n       const token = res?.tokenId;\n       //console.log(result);\n\n       try {\n           dispatch({ type: 'AUTH', data : {result, token} });\n           history.push('/');\n       } catch (error) {\n        console.log(\"Google sign in unsuccessful\");\n       }\n\n    }\n   const googleFailure =() => {\n       console.log(\"Google sign in unsuccessful\");\n\n    }\n    \n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={3}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n\n                </Avatar>\n                <Typography variant=\"h5\">{ isSignup ? 'Sign Up':'Sign In'}</Typography>\n                <form className={classes.form} onSubmit={handleSubmit} >\n                    <Grid container spacing={2}>\n                        {\n                            isSignup && (\n                                <>\n                                    <Input name=\"firstNmae\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                                    <Input name=\"lastNmae\" label=\"Last Name\" handleChange={handleChange} half />\n\n                                </>\n                            ) \n                        }\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\"/>\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\n                        { isSignup && <Input name=\"confirmPassword\" label=\"Confirm Password\" handleChange={handleChange} type=\"password\"/>}\n                    </Grid>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                        { isSignup ? 'Sign Up' : 'Sign In'}\n                    </Button>\n\n                    <GoogleLogin \n                        clientId=\"847882486171-1emc0cvst6acsclheaa4i3049knkk49l.apps.googleusercontent.com\"\n                        render={(renderProps)=>(\n                            <Button className={classes.googleButton} color=\"primary\" fullWidth onClick={renderProps.onClick} disabled={renderProps.disabled} startIcon={<Icon/>} variant=\"contained\" >\n                                Google Sign In\n                            </Button>\n                        )\n                    }\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy=\"single_host_origin\"\n\n                    />\n                   \n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Button onClick={switchMode}>{ isSignup ? 'Already have an account? Sign In' : 'Create an new account? Sign Up'}</Button>\n                        </Grid>\n\n                    </Grid >\n                </form>\n            </Paper>\n\n        </Container>\n    );\n};\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}