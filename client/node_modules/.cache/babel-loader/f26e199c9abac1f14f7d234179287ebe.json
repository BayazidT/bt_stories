{"ast":null,"code":"var _jsxFileName = \"/Users/machd/Projects/React&Node/bt_notes/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './styles.js';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  var _user$result3;\n\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      var _user$result;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n    } else {\n      var _user$result2;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please sign in for like and write your own stories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.form} ${classes.root}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Blog\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Form, \"ITP8pFzdmzfviS9wwyYT5IxY2MY=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/machd/Projects/React&Node/bt_notes/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","createPost","updatePost","Form","currentId","setCurrentId","user","JSON","parse","localStorage","getItem","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","name","result","clear","paper","form","root","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport useStyles from './styles.js';\nimport { TextField, Button, Typography, Paper} from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { createPost, updatePost} from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) =>{\n    const user = JSON.parse(localStorage.getItem('profile'));\n   const [postData, setPostData] = useState({\n       title: '', message:'', tags:'',selectedFile:''\n   });\n\n   const post = useSelector((state) => currentId? state.posts.find((p)=>p._id===currentId): null);\n\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() =>{\n        if(post) setPostData(post);\n\n    },[post]);\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if(currentId){\n            dispatch(updatePost(currentId,{ ...postData, name:user?.result?.name}))\n        }else{\n            dispatch(createPost({ ...postData, name:user?.result?.name}));\n        }\n       clear();\n    }\n    const clear = () =>{\n        setCurrentId(0);\n        setPostData({\n            title: '', message:'', tags:'',selectedFile:''\n        });\n\n\n    }\n    if(!user?.result?.name){\n        return(\n            <Paper className={classes.paper}>\n                <Typography variant=\"h6\" align=\"center\">\n                    Please sign in for like and write your own stories\n                </Typography>\n\n            </Paper>\n        )\n    }\n\n  \n    return (\n       <Paper className={classes.paper}>\n           <form autoComplete=\"off\" noValidate className={`${classes.form} ${classes.root}`} onSubmit={handleSubmit}>\n<Typography variant=\"h6\">{ currentId? 'Editing': 'Creating'} a Blog</Typography>\n<TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value ={postData.title} onChange={(e)=> setPostData({...postData, title: e.target.value})} />\n<TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value ={postData.message} onChange={(e)=> setPostData({...postData, message: e.target.value})} />\n<TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value ={postData.tags} onChange={(e)=> setPostData({...postData, tags: e.target.value.split(',')})} />\n\n<div className={classes.fileInput}>\n    <FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile:base64})}/>\n</div>\n<Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\"  type=\"submit\" fullWidth>Submit</Button>\n<Button className={classes.buttonSubmit} variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n \n           </form>\n           \n\n       </Paper>\n    )\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}