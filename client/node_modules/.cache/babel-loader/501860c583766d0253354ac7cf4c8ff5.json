{"ast":null,"code":"import * as api from '../api';\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPost();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log({\n      message: error\n    });\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id = async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id);\n    dispatch({\n      type: 'LIKE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/Users/machd/Projects/React&Node/short/client/src/actions/posts.js"],"names":["api","getPosts","dispatch","data","fetchPost","type","payload","error","console","log","createPost","post","message","updatePost","id","deletePost","likePost"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAmB;AAC7C,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACI,SAAJ,EAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAEH;AAA9B,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,CARM;AASP,OAAO,MAAMG,UAAU,GAAIC,IAAD,IAAU,MAAMT,QAAN,IAAkB;AAClD,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACU,UAAJ,CAAeC,IAAf,CAAvB;AACAT,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAEH;AAA3B,KAAD,CAAR;AACF,GAHF,CAGG,OAAOI,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACG,MAAAA,OAAO,EAACL;AAAT,KAAZ;AACH;AACJ,CAPM;AAQP,OAAO,MAAMM,UAAU,GAAG,CAACC,EAAD,EAAKH,IAAL,KAAa,MAAMT,QAAN,IAAkB;AAErD,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACa,UAAJ,CAAeC,EAAf,EAAmBH,IAAnB,CAAvB;AACAT,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,OAAO,EAAEH;AAA1B,KAAD,CAAR;AAEE,GAJN,CAIO,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,OAAlB;AAER;AAEJ,CAXM;AAYP,OAAO,MAAMG,UAAU,GAAID,EAAD,IAAQ,MAAOZ,QAAP,IAAmB;AACjD,MAAI;AACA,UAAMF,GAAG,CAACe,UAAJ,CAAeD,EAAf,CAAN;AACAZ,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,OAAO,EAAEQ;AAA1B,KAAD,CAAR;AACH,GAHD,CAGE,OAAOP,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAPM;AAQP,OAAO,MAAMS,QAAQ,GAAIF,EAAD,GAAM,MAAMZ,QAAN,IAAkB;AAC5C,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACa,UAAJ,CAAeC,EAAf,CAAvB;AACAZ,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,OAAO,EAAEH;AAAxB,KAAD,CAAR;AAEE,GAJN,CAIO,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,OAAlB;AAER;AACJ,CATM","sourcesContent":["import * as api from '../api';\n\nexport const getPosts = () => async(dispatch) => {\n    try {\n        const { data } = await api.fetchPost();\n        dispatch({ type: 'FETCH_ALL', payload: data});\n    } catch (error) {\n        console.log(error);\n    }\n \n}\nexport const createPost = (post) => async(dispatch) =>{\n    try {\n        const { data } = await api.createPost(post);\n        dispatch({ type: 'CREATE', payload: data });\n     } catch (error) {\n        console.log({message:error});\n    }\n}\nexport const updatePost = (id, post) =>async(dispatch) =>{\n\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({type: 'UPDATE', payload: data});\n    \n         } catch (error) {\n             console.log(error.message);\n        \n    }\n\n}\nexport const deletePost = (id) => async (dispatch) =>{\n    try {\n        await api.deletePost(id);\n        dispatch({type: 'DELETE', payload: id});\n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const likePost = (id) =async(dispatch) =>{\n    try {\n        const { data } = await api.updatePost(id);\n        dispatch({type: 'LIKE', payload: data});\n    \n         } catch (error) {\n             console.log(error.message);\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}