{"ast":null,"code":"var _jsxFileName = \"/Users/machd/Projects/React&Node/short/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './styles.js';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.form} ${classes.root}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Blog\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Form, \"rMCeZB4PdA++tR6/t32PorYGu1s=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/machd/Projects/React&Node/short/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","form","root","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport useStyles from './styles.js';\nimport { TextField, Button, Typography, Paper} from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { createPost, updatePost} from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) =>{\n    \n   const [postData, setPostData] = useState({\n       creator: '', title: '', message:'', tags:'',selectedFile:''\n   });\n\n   const post = useSelector((state) => currentId? state.posts.find((p)=>p._id===currentId): null);\n\n\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() =>{\n        if(post) setPostData(post);\n\n    },[post]);\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if(currentId){\n            dispatch(updatePost(currentId,postData))\n        }else{\n            dispatch(createPost(postData))\n        }\n       clear();\n    }\n    const clear = () =>{\n        setCurrentId(0);\n        setPostData({\n            creator: '', title: '', message:'', tags:'',selectedFile:''\n        });\n\n\n    }\n\n  \n    return (\n       <Paper className={classes.paper}>\n           <form autoComplete=\"off\" noValidate className={`${classes.form} ${classes.root}`} onSubmit={handleSubmit}>\n<Typography variant=\"h6\">{ currentId? 'Editing': 'Creating'} a Blog</Typography>\n<TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value ={postData.creator} onChange={(e)=> setPostData({...postData, creator: e.target.value})} />\n<TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value ={postData.title} onChange={(e)=> setPostData({...postData, title: e.target.value})} />\n<TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value ={postData.message} onChange={(e)=> setPostData({...postData, message: e.target.value})} />\n<TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value ={postData.tags} onChange={(e)=> setPostData({...postData, tags: e.target.value})} />\n\n<div className={classes.fileInput}>\n    <FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile:base64})}/>\n</div>\n<Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\"  type=\"submit\" >Submit</Button>\n<Button className={classes.buttonSubmit} variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} >Clear</Button>\n \n           </form>\n           \n\n       </Paper>\n    )\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}